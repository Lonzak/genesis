package com.projetloki.genesis;

/**
 * Object passed to a CSS module, that receives rules and other declarations.
 * See {@link CssModule} for examples.
 *
 * @author Cl√©ment Roux
 */
public interface CssBuilder {
  /** Adds a CSS rule to this builder. */
  void addRule(Selector selector, PropertiesOrBuilder properties);

  /**
   * Adds a CSS rule to this builder.
   * @throws IllegalArgumentException if the given string is not the CSS
   *     notation of a selector
   */
  void addRule(String selector, PropertiesOrBuilder properties);

  /**
   * Adds a conditional CSS rule to this builder. The rule only applies if the
   * condition is satisfied.
   * The CSS notation of a conditional rule is
   * <pre><code> &#064;media condition {
   *   selector {
   *     properties
   *   }
   * }
   * </code></pre>
   */
  void addRule(Selector selector, PropertiesOrBuilder properties,
      MediaCondition condition);

  /**
   * Adds a conditional CSS rule to this builder. The rule only applies if the
   * condition is satisfied.
   * The CSS notation of a conditional rule is
   * <pre><code> &#064;media condition {
   *   selector {
   *     properties
   *   }
   * }
   * </code></pre>
   * @throws IllegalArgumentException if the given string is not the CSS
   *     notation of a selector
   */
  void addRule(String selector, PropertiesOrBuilder properties,
      MediaCondition condition);

  /**
   * Reads CSS rules from the given string, and adds them to this builder.
   * Example:
   * <pre><code> out.addRules(
   *     ".balloon{width:20px;height:20px}" +
   *     ".balloon-box{background:blue}");
   * </code></pre>
   *
   * <p>The input string can't contain  &#064;-rules ( &#064;import,
   * &#064;keyface, etc.). CSS comments are allowed, but they will be discarded.
   * </p>
   *
   * <p>This method can be used to import a whole CSS file from Java resources.
   * Example:
   * <pre><code> String css = com.google.common.io.Resources.toString(
   *     getClass().getResource("my-css.css"), Charsets.UTF_8);
   * out.addRules(css);
   * </code></pre>
   * </p>
   * @throws IllegalArgumentException if the given string is not a valid
   *     sequence of CSS rules
   */
  void addRules(String rules);

  /** Same as {@link #addRules(String)}, but adds conditional rules. */
  void addRules(String rules, MediaCondition condition);

  /**
   * Installs the given module if it has not been installed yet.
   *
   * <p>
   * All the modules that are installed in the
   * {@link CssModule#configure(CssBuilder)} method of M are called the
   * dependencies of M.</p>
   * @throws CssModuleException if an exception happens during the execution of
   *     {@link CssModule#configure(CssBuilder)}
   */
  void install(CssModule module);

  /**
   * Declares the given font-face rule.
   * Its definition will be added on top of the CSS file.
   */
  void use(FontFace fontFace);

  /**
   * Declares the given keyframes rule.
   * Its definition will be added on top of the CSS file.
   */
  void use(Keyframes keyframes);

  /**
   * Adds an import rule to this builder.
   * Tells browsers to import the CSS at the given URI.
   *
   * <p>
   * You should rarely have to use imports. It's better to have a single CSS,
   * generated by possibly several modules.</p>
   *
   * @see <a target="_blank" href="https://developer.mozilla.org/en-US/docs/CSS/@import">MDN</a>
   */
  void importCss(String uri);

  /**
   * Adds a conditional import rule to this builder.
   * Tells browsers to import the CSS at the given URI if the given condition is
   * satisfied.
   *
   * <p>
   * You should rarely have to use imports. It's better to have a single CSS,
   * generated by possibly several modules.</p>
   *
   * @see <a target="_blank" href="https://developer.mozilla.org/en-US/docs/CSS/@import">MDN</a>
   */
  void importCss(String uri, MediaCondition condition);
}
